#!/bin/bash

# parse arguments
while [ "$#" -gt 0 ]; do

  # check if number of iterations is specified
  if [ -z "$n" ] && [ "$1" -eq "$1" ] 2>/dev/null && [ "$1" -gt 0 ]; then
    n="$1"
    shift
    continue
  fi

  # check if the "-r" flag is specified
  if [ -z "$r" ] && [ "$1" == "-r" ]; then
    r=1
    shift
    continue
  fi

  # "--" indicates the start of the run command
  if [ "$1" == "--" ]; then
    shift
    break
  fi

  shift

done

# exit if no run command specified
if [ "$#" -eq 0 ]; then
  echo "$0: need a command" 1>&2
  echo "usage: $0 [num_iterations] [-r] -- run_command" 1>&2
  exit 1
fi

# check if `Rscript` is installed
command -v Rscript >/dev/null 2>&1
if [ "$?" -eq 0 ]; then
  has_r=1
else
  has_r=""
fi

# default number of iterations is 10
if [ -z "$n" ]; then
  n=10
fi

# only output real time
TIMEFORMAT=%3R

# pipe `stdout` (ie. the run command's output) to `/dev/null`, and pipe
# `stderr` (ie. the `time` program's output) to `stdout`
for (( i=0; i<n; i++ )); do
  time (eval "$@" > /dev/null) 2>&1
done |

# pipe to `Rscript` to compute stats if "-r" flag is set and `Rscript` is
# installed, else print the raw timings
if [ -n "$r" ] && [ -n "$has_r" ]; then
  Rscript -e 'data <- scan("stdin", quiet=TRUE)' \
          -e 'printf <- function(...) cat(sprintf(...))' \
          -e 'printf("n       %d\\n", NROW(data))' \
          -e 'printf("mean    %.5f\\n", mean(data))' \
          -e 'printf("median  %.5f\\n", median(data))' \
          -e 'printf("sd      %.5f\\n", sd(data))' \
          -e 'printf("min     %.5f\\n", min(data))' \
          -e 'printf("max     %.5f\\n", max(data))'
else
  cat
fi
